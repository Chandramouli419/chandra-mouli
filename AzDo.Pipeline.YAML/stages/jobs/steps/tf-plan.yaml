parameters:
  az_client_id: ''                     # az_client_id
  az_client_secret: ''                 # Az Client Secret
  az_tenant_id: ''                     # Az Tenant Id
  az_stg_acc_rg_name: ''               # AZ Stg Acc RG Name
  az_stg_acc: ''                       # AZ Storage Account
  az_stg_container: ''                 # AZ Container Name
  access_key: ''                       # Storage Account Access Key
  az_tf_state_file: ''                 # Terraform State File
  tf_var_file: 'terraform.tfvars'      # TF Vars File
  working_directory: ''                # Working Directory
  source_directory: ''                 # Top Level source directory (containing all shared modules)
  tf_plan: 'tfplan'                    # name of TF Plan
  to_mail: ''                          # Mail Reciever
  from_mail: 'DG-DevOps@StoneX.com'    # Mail Send
  copy_from_top: true                  # Copy from top level (true/false)
  specific_directory: ''               # To be used if copy from top level is false
  #variable_group: ''

steps:
    - task: CmdLine@2
      inputs:
        script: 'dir'
        workingDirectory: '${{ parameters.working_directory }}'
    - task: CmdLine@2
      inputs:
        script: | 
          echo checking parameters
          echo ${{ parameters.to_mail }}
          echo ${{ parameters.az_tf_state_file }}
          echo ${{ parameters.copy_from_top }}
    - ${{ if eq(parameters.copy_from_top, true) }}:
      - task: CopyFiles@2
        displayName: "Copy originals from top level for later use"
        inputs:
          SourceFolder: '${{ parameters.source_directory }}'
          Contents: '**'
          TargetFolder: '${{ parameters.source_directory }}/drop/'
          CleanTargetFolder: true


    - ${{ if eq(parameters.copy_from_top, false) }}:
      - task: CopyFiles@2
        displayName: "Copy originals from specific path for later use"
        inputs:
          SourceFolder: '${{ parameters.specific_directory }}'
          Contents: '**'
          TargetFolder: '${{ parameters.source_directory }}/drop/'
          CleanTargetFolder: true
 
    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      displayName: 'Replace tokens in files'
      inputs:
        rootDirectory: '${{ parameters.working_directory }}'
        targetFiles: '*.tf,*.tfvars' 

    - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
      displayName: 'Install Terraform'

    - script: terraform version
      displayName: Terraform Version  

    - script:  az login --service-principal -u ${{ parameters.az_client_id }} -p ${{ parameters.az_client_secret }} --tenant ${{ parameters.az_tenant_id }}
      displayName: 'Log Into Azure'  

    - script: terraform init -backend-config=resource_group_name=${{ parameters.az_stg_acc_rg_name }} -backend-config="storage_account_name=${{ parameters.az_stg_acc }}" -backend-config="container_name=${{ parameters.az_stg_container }}" -backend-config="access_key=${{ parameters.access_key }}" -backend-config="key=${{ parameters.az_tf_state_file }}"
      workingDirectory: '${{ parameters.working_directory }}'
      displayName: "Terraform Init"

    - script: terraform plan --var-file="${{ parameters.tf_var_file }}" -out="${{ parameters.tf_plan }}"
      displayName: Terraform Plan
      workingDirectory: '${{ parameters.working_directory }}'

    - task: CmdLine@2
      displayName: "TF Plan to Text Format"
      inputs:
        script: 'terraform show ${{ parameters.tf_plan }} -no-color > ${{ parameters.tf_plan }}.txt'
        workingDirectory:  '${{ parameters.working_directory }}'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '${{ parameters.source_directory }}/drop/'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      condition: succeeded()
    - ${{ if ne(parameters.to_mail, '') }}:
      - task: SendEmail@1
        displayName: "Send TF Plan Mail"
        inputs:
          To: '${{parameters.to_mail}}'
          From: '${{parameters.from_mail}}'
          Subject: 'TF Plan Review'
          Body: 'Please review attached TF Plan'
          BodyAsHtml: false
          AddAttachment: true
          Attachment: '${{ parameters.working_directory }}/${{ parameters.tf_plan }}.txt'
          SmtpServer: 'apps-outbound.fcstone.com'
          SmtpPort: '25'
          UseSSL: false